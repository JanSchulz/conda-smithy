#!/usr/bin/env bash

# NOTE: This script has been automatically generated by github.com/conda-forge/conda-smithy/...

FEEDSTOCK_ROOT=$(cd "$(dirname "$0")/.."; pwd;)
{% if not is_multi %}
RECIPE_ROOT=$FEEDSTOCK_ROOT/{{ recipe_dir }}
{% else %}
RECIPE_ROOT=$FEEDSTOCK_ROOT/recipes

{% endif %}
docker info

config=$(cat <<CONDARC

channels:
{% for channel in channels.get('sources', []) | sort %}
 - {{ channel }}
{% endfor %}
 - defaults # As we need conda-build
 - conda-forge # As we need conda-buildall

conda-build:
 root-dir: /feedstock_root/build_artefacts

show_channel_urls: True

CONDARC
)

cat << EOF | docker run -i \
                        -v ${RECIPE_ROOT}:/recipe_root \
                        -v ${FEEDSTOCK_ROOT}:/feedstock_root \
                        -a stdin -a stdout -a stderr \
                        {{ docker.image }} \
                        {{ docker.command }} || exit $?

# The BINSTAR secure variable is set by 'conda smithy register-feedstock-ci' via a web request.
export BINSTAR_TOKEN=${BINSTAR_TOKEN}
export PYTHONUNBUFFERED=1

echo "$config" > ~/.condarc
# A lock sometimes occurs with incomplete builds. The lock file is stored in build_artefacts.
conda clean --lock

conda info
{%if build_setup %}
{{ build_setup }}{% endif %}

{% if not is_multi %}
{% block build -%}conda build /recipe_root --quiet || exit 1
{% for owner, channel in channels['targets'] %}
/feedstock_root/ci_support/upload_or_check_non_existence.py /recipe_root {{ owner }} --channel={{ channel }} || exit 1
{% endfor %}

{% endblock -%}
{% else %}
# TODO: remove version after conda-build-all has a new release
conda install --yes conda-build-all conda-build=1.18.2
conda buildall /recipe_root --no-inspect-conda-bld-directory \
  {% for owner, channel in channels['targets'] %} --upload-channels "{{ owner }}/channel/{{ channel }}"{% endfor %}\
  {% for owner, channel in channels['targets'] %} --inspect-channels "{{ owner }}/channel/{{ channel }}"{% endfor %}
{% endif %}

EOF

